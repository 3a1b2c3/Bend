---
source: tests/golden_tests.rs
input_file: tests/golden_tests/encode_pattern_match/match_auto_linearization.hvm
---
TaggedScott:
(switch_linearization) = λa switch a = a { 0: λb let {b b_2 b_3} = b; let {c c_2} = 2; let {d e} = c; let (f, g) = (0, b); (b_2 c_2 d e (0, b_3) f g); _: λh let {h h_2 h_3} = h; λi let {i i_2 i_3} = i; let {j j_2} = 2; let {k l} = j; let (m, n) = ((+ h 1), i); (h_2 i_2 j_2 k l ((+ h_3 1), i_3) m n) }

(match_linearization) = λa #Nat (a #Nat λb let {b b_2 b_3} = b; λc let {c c_2 c_3} = c; let {d d_2} = 2; let {e f} = d; let (g, h) = ((Nat.succ b), c); (b_2 c_2 d_2 e f ((Nat.succ b_3), c_3) g h) λi let {i i_2 i_3} = i; let {j j_2} = 2; let {k l} = j; let (m, n) = (Nat.zero, i); (i_2 j_2 k l (Nat.zero, i_3) m n))

(switch_shadowed_field) = λa λb switch a = a { 0: b; _: λc c }

(match_shadowed_field) = λa λb λc #List (a #List λd #List λe (List.cons d e) (List.cons b c))

(List.cons) = λa λb #List λc #List λ* #List (c a b)

(List.nil) = #List λ* #List λb b

(Nat.succ) = λa #Nat λb #Nat λ* #Nat (b a)

(Nat.zero) = #Nat λ* #Nat λb b

Scott:
(switch_linearization) = λa switch a = a { 0: λb let {b b_2 b_3} = b; let {c c_2} = 2; let {d e} = c; let (f, g) = (0, b); (b_2 c_2 d e (0, b_3) f g); _: λh let {h h_2 h_3} = h; λi let {i i_2 i_3} = i; let {j j_2} = 2; let {k l} = j; let (m, n) = ((+ h 1), i); (h_2 i_2 j_2 k l ((+ h_3 1), i_3) m n) }

(match_linearization) = λa (a λb let {b b_2 b_3} = b; λc let {c c_2 c_3} = c; let {d d_2} = 2; let {e f} = d; let (g, h) = ((Nat.succ b), c); (b_2 c_2 d_2 e f ((Nat.succ b_3), c_3) g h) λi let {i i_2 i_3} = i; let {j j_2} = 2; let {k l} = j; let (m, n) = (Nat.zero, i); (i_2 j_2 k l (Nat.zero, i_3) m n))

(switch_shadowed_field) = λa λb switch a = a { 0: b; _: λc c }

(match_shadowed_field) = λa λb λc (a λd λe (List.cons d e) (List.cons b c))

(List.cons) = λa λb λc λ* (c a b)

(List.nil) = λ* λb b

(Nat.succ) = λa λb λ* (b a)

(Nat.zero) = λ* λb b
