---
source: tests/golden_tests.rs
input_file: tests/golden_tests/compile_file_o_all/repeated_name_trucation.hvm
---
Warnings:
Seems like you're trying to run some recursive function(s) on strict-mode:
long_name_that_truncates
long_name_that_truncates$C0

Due to the ultra-greedy nature of strict-mode, that might result in infinite loops.

You have 2 options:

1. Easy Fix: use lazy-mode.

Just append the `-L` option to `HVM-Lang`, and it will run in lazy-mode. It has the advantage of not doing wasteful work, having an improved complexity class, and being compatible with unrestricted recursion! It has a small overhead though, and isn't compatible with GPU.

2. Hard Fix: use combinators.

By converting your program to use combinators, you can avoid the direct recursive calls that result in loops. If you use the built-in `data` and `match` syntaxes, HVM-Lang usually does this for you, but it couldn't handle your program. See here for more info: https://github.com/HigherOrderCO/hvm-lang/blob/main/docs/lazy-definitions.md.


@long_name_that_truncates = (* @long_name_that_truncates$C0)
@long_name_that_truncates$C0 = (* @long_name_that_truncates)
@main = a
& @long_name_that_truncates ~ ((b b) a)
