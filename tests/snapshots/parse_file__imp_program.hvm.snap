---
source: tests/golden_tests.rs
input_file: tests/golden_tests/parse_file/imp_program.hvm
---
(symbols) = let x = (Map/set (Map/set Map/empty 4294967281 5) 2 3); let x = (Map/set x 4294967281 2); let x = (Map/set x 2 3); let (map/get%0, x) = (Map/get x 4294967281); (+ map/get%0 4286483570)

(mk_point) = (Point/Point 1 2)

(identity x) = x

(inc n) = let n = (+ n 1); n

(lam) = λx λy x

(do_match b) = match b = b { True: 1; False: 0; }

(true) = Bool/True

(fib n) = switch %pred = (< n 2) { 0: (+ (fib (- n 1)) (fib (- n 2))); _ %pred-1: n; }

(swt n) = switch n = n { 0: 42; _ n-1: 1; }

(fld list) = fold list = list { List/cons: 1; List/nil: 2; }

(bnd) = bend x = 0, while (< x 10) { (List/cons x (go (+ x 1))) } then { List/nil }

(main) = do IO.bind { ask x = IO.read; x }

(List/cons) = λhead λtail λList/cons λList/nil (List/cons head tail)

(List/nil) = λList/cons λList/nil List/nil

(Map/node) = λvalue λleft λright λMap/node λMap/leaf (Map/node value left right)

(Map/leaf) = λMap/node λMap/leaf Map/leaf

(Point/Point) = λx λy λPoint/Point (Point/Point x y)

(Bool/True) = λBool/True λBool/False Bool/True

(Bool/False) = λBool/True λBool/False Bool/False
